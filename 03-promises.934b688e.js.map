{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QACpC,IACIC,EADAC,EAAa,GAkCjB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EACEM,EAAAjB,GAASkB,OAAOC,QACd,uBAAqBX,QAAiBC,QAI1CG,EACEK,EAAAjB,GAASkB,OAAOE,QACd,sBAAoBZ,QAAeC,OAAW,GAInDA,EAAM,G,CAhDbP,EAAKmB,iBAAiB,UAAUC,IAC9BhB,EAAWgB,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MAC9BC,QAAQC,IAAIrB,MAGrBJ,EAAKmB,iBAAiB,UAAUC,IAC9BA,EAAEM,iBACF,MAAMC,EAAWvB,EAAWwB,OACtBC,EAAYzB,EAAW0B,KACvBC,EAAa3B,EAAW4B,MAC9B7B,EAAQ4B,EACR,IAAK,IAAIE,EAAI,EAAGA,GAAKN,EAAUM,GAAK,EAClC9B,EAAQ+B,OAAO/B,GAAS+B,OAAOL,GAC/BxB,EAAc4B,EAAG9B,GACdgC,MAAK,EAAC7B,SAAEA,EAAU0B,MAAAI,KACV3B,QACLM,EAAAjB,GAASkB,OAAOC,QACd,uBAAqBX,QAAiB8B,UAI3CC,OAAM,EAAC/B,SAAEA,EAAU0B,MAAAM,KACX5B,OACLK,EAAAjB,GAASkB,OAAOE,QACd,sBAAoBZ,QAAiBgC,S","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nlet dataObject = {};\nlet delay;\n\nform.addEventListener('change', e => {\n  dataObject[e.target.name] = e.target.value;\n  return console.log(dataObject);\n});\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const position = dataObject.amount;\n  const delayStep = dataObject.step;\n  const firstDelay = dataObject.delay;\n  delay = firstDelay;\n  for (let i = 1; i <= position; i += 1) {\n    delay = Number(delay) + Number(delayStep);\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        return resolve(\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          )\n        );\n      })\n      .catch(({ position, delay }) => {\n        return reject(\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          )\n        );\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          )\n        );\n      } else {\n        reject(\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          )\n        );\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$dataObject","$47d4ff9957288465$var$createPromise","position","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","failure","addEventListener","e","target","name","value","console","log","preventDefault","position1","amount","delayStep","step","firstDelay","delay","i","Number","then","delay1","catch","delay2"],"version":3,"file":"03-promises.934b688e.js.map"}